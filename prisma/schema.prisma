generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model business_organization {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String                @db.VarChar(255)
  user_id             String                @db.Uuid
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  user                user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employee_feedback   employee_feedback[]
  environmental_data  environmental_data[]
  sustainability_goal sustainability_goal[]
}

model employee_feedback {
  id                       String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                  String                @db.Uuid
  business_organization_id String                @db.Uuid
  feedback                 String
  created_at               DateTime              @default(now()) @db.Timestamp(6)
  updated_at               DateTime              @default(now()) @db.Timestamp(6)
  business_organization    business_organization @relation(fields: [business_organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                     user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model environmental_data {
  id                       String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_organization_id String                @db.Uuid
  carbon_emissions         Int
  energy_consumption       Int
  waste_production         Int
  recycling_rate           Int
  created_at               DateTime              @default(now()) @db.Timestamp(6)
  updated_at               DateTime              @default(now()) @db.Timestamp(6)
  business_organization    business_organization @relation(fields: [business_organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model resource {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String   @db.VarChar(255)
  description   String
  url           String   @db.VarChar(255)
  resource_type String   @db.VarChar(50)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
}

model sustainability_goal {
  id                        String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_organization_id  String                @db.Uuid
  target_carbon_emissions   Int
  target_energy_consumption Int
  target_waste_reduction    Int
  created_at                DateTime              @default(now()) @db.Timestamp(6)
  updated_at                DateTime              @default(now()) @db.Timestamp(6)
  business_organization     business_organization @relation(fields: [business_organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                 String                  @unique @db.VarChar(255)
  firstName             String?                 @db.VarChar(255)
  lastName              String?                 @db.VarChar(255)
  roq_user_id           String                  @db.VarChar(255)
  tenant_id             String                  @db.VarChar(255)
  business_organization business_organization[]
  employee_feedback     employee_feedback[]
}
